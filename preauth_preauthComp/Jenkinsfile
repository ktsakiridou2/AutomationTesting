dir = ' -dir ../AutomationTesting/Tests/preauth_preauthComp'

def init()
{
        script
        {
                bat 'python.exe ../AutomationTesting/SetupTest.py '
        }
}

def preauth_preauthComp(size)
{
        script
        {
                for(int i=0; i < size; ++i)
                {
                        catchError(stageResult: 'FAILURE')
                        {
                            max = 10
                            random_num = "${Math.abs(1 + new Random().nextInt(max+1))}"
                            amount = '-a' + random_num.toString()

                            log = ' -lp preauthLog' + i.toString() + '.LOG'
                            data = ' -out Data' + i.toString()+ '.txt'
                            globalVal = ' -gv ../AutomationTesting/validation/globalValidations.txt'

                            str = 'python.exe ../AutomationTesting/Main.py ' + connType + ip +' -vp ../AutomationTesting/validation/preauth0.txt ' + amount + dir + log + data + logsPort
                            bat str 


                            log = ' -lp preauthCompletionLog' + i.toString() + '.LOG'
                            data = ' -in Data' + i.toString()+ '.txt'
                            str = 'python.exe ../AutomationTesting/Main.py ' + connType + ip +' -vp ../AutomationTesting/validation/preauthCompletion0.txt ' + dir + log + data + globalVal + logsPort
                            bat str
                        }
                }
        }
}

def journal()
{
    script
    {
        catchError(stageResult: 'FAILURE')
        {
             log = ' -lp journalLog.LOG'
             str = 'python.exe ../AutomationTesting/Main.py ' + connType + ip + ' -vp ../AutomationTesting/validation/journal.txt ' + dir + log + logsPort
             bat str
        }
    }       
}

def closeBatch(valPath, index)
{
    script
    {
        catchError(stageResult: 'FAILURE')
        {
            log = ' -lp closeBatchLog' + index.toString() + '.LOG'
            str = 'python.exe ../AutomationTesting/Main.py ' + connType + ip +' -vp ' + valPath + dir + log + logsPort
            bat str
        }
    }
}

pipeline {
    agent any

    stages 
    {

        stage('Init')
        {
            steps
            {
                init() 
            }
        }
            
        stage('closeBatch1')
        {
            steps
            {
                        
                closeBatch('../AutomationTesting/validation/closeBatch.txt', 0)
            }
        }

        stage('preauths/preauthCompletions')
        {
            steps
            {
                preauth_preauthComp(1)
            }
            
        }
        stage('Journal')
        {
            steps
            {
                journal()
            }
        }
            
        stage('closeBatch2')
        {
            steps
            {
                closeBatch('../AutomationTesting/validation/closeBatch.txt', 1)
            }
        }
    }
}
