ip = ' -ip 192.168.0.103'
connType = ' -t 2'
dir = ' -dir ../AutomationTesting/Tests/t2_preauths_then_refunds'
globalVal = ' -gv ../AutomationTesting/validation/globalValidations.txt'
comPort = ' -serialPort COM6'
logsPort = ' -logsPort COM7'
baudRate = ' -baud 9600'
cur = ' -cur 975'

def init()
{
        script
        {
                bat 'python.exe ../AutomationTesting/SetupTest.py '
        }
}

def preauth(size)
{
    script
    {
        for(int i= 0; i<size; ++i)
        {
            catchError(stageResult: 'FAILURE')
            {
                max = 98
                random_num = "${Math.abs(1 + new Random().nextInt(max+1))}"
                amount = '-a' + random_num.toString()               
                data = ' -out preauthData' + i.toString()+ '.txt'
                log = ' -lp preauthLog' + i.toString() + '.LOG'
                str = 'python.exe ../AutomationTesting/Main.py ' + connType + ip + dir + comPort + logsPort + baudRate + cur +' -vp ../AutomationTesting/validation/preauth0.txt ' + amount + data + log
                bat str 
            }
        }
    }
}

def refund(size)
{
    script
    {
        for(int i=0; i<size; ++i)
        {
            catchError(stageResult: 'FAILURE')
            {
                log = ' -lp refundLog' + i.toString() + '.LOG'
                data = ' -in preauthData' + i.toString()+ '.txt'
                outData = ' -out refundData' + i.toString()+ '.txt'    
                str = 'python.exe ../AutomationTesting/Main.py ' + connType + ip + ' -vp ../AutomationTesting/validation/refund0.txt ' + data + dir + log + comPort + baudRate + cur + logsPort + outData
                bat str 
              }
        }
    }
}

pipeline {
    agent any

    stages 
    {
        stage('preauth')
        {
            steps
            {
                preauth(50)
            }
            
        }

        stage('refund')
        {
            steps
            {
                refund(50)
            }
            
        }
    }
}
