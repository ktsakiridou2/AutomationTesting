dir = ' -dir ../AutomationTesting/Tests/sale_refund_refund'

def sale(size)
{
    script
    {
        for(int i=0; i<size; ++i)
        {
            catchError(stageResult: 'FAILURE')
            {
                max = 98
                random_num = "${Math.abs(1 + new Random().nextInt(max+1))}"
                amount = '-a' + random_num.toString()
                data = ' -out ../AutomationTesting/transData/Data' + i.toString()+ '.txt'
                str = 'python.exe ../AutomationTesting/Main.py ' + connType + ip +' -vp ../AutomationTesting/validation/sale0.txt ' + amount + data
                bat str 
            }
        }
    }
}

def refund(size)
{
    script
    {
        catchError(stageResult: 'FAILURE')
        {
            for(int i=0; i<size; ++i)
            {
                data = '-in ../AutomationTesting/transData/Data' + i.toString()+ '.txt'
                str = 'python.exe ../AutomationTesting/Main.py ' + connType + ip +' -vp ../AutomationTesting/validation/refund0.txt ' + data
                bat str
            }
        }
    }

}

def closeBatch(valPath)
{
    script
    {
        catchError(stageResult: 'FAILURE')
        {
            str = 'python.exe ../AutomationTesting/Main.py ' + connType + ip +' -vp ' + valPath
            bat str
        }
    }
}

pipeline {
    agent any

    stages 
    {


        stage('closeBatchStart')
        {
            steps
            {
                        
                closeBatch('../AutomationTesting/validation/closeBatch1.txt')
            }
        }

        stage('sale')
        {
            steps
            {
                sale(1)
            }
            
        }

        stage('refund1')
        {
            steps
            {
                refund(1)
            }
            
        }

        stage('refund2')
        {
            steps
            {
                refund(1)
            }
            
        }
        
        stage('closeBatch')
        {
            steps
            {
                closeBatch('../AutomationTesting/validation/closeBatch.txt')
            }
        }
    }
}
